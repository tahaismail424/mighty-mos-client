{"ast":null,"code":"import { __extends } from 'tslib';\nimport JSONBig from '@apimatic/json-bigint';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Thrown when the HTTP status code is not okay.\r\n *\r\n * The ApiError extends the ApiResponse interface, so all ApiResponse\r\n * properties are available.\r\n */\n\nvar ApiError = /*#__PURE__*/\n\n/** @class */\nfunction (_super) {\n  __extends(ApiError, _super);\n  function ApiError(context, message) {\n    var _this = _super.call(this, message) || this;\n    var request = context.request,\n      response = context.response;\n    _this.request = request;\n    _this.statusCode = response.statusCode;\n    _this.headers = response.headers;\n    _this.body = response.body;\n    if (typeof response.body === 'string' && response.body !== '') {\n      var JSON_1 = JSONBig();\n      try {\n        _this.result = JSON_1.parse(response.body);\n      } catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (console) {\n            // tslint:disable-next-line:no-console\n            console.warn(\"Unexpected error: Could not parse HTTP response body as JSON. \" + error.message);\n          }\n        }\n      }\n    }\n    return _this;\n  }\n  return ApiError;\n}(Error);\nexport { ApiError };","map":{"version":3,"names":["__extends","JSONBig","ApiError","_super","context","message","_this","call","request","response","statusCode","headers","body","JSON_1","result","parse","error","process","env","NODE_ENV","console","warn","Error"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/core/es/errors/apiError.js"],"sourcesContent":["import { __extends } from 'tslib';\nimport JSONBig from '@apimatic/json-bigint';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Thrown when the HTTP status code is not okay.\r\n *\r\n * The ApiError extends the ApiResponse interface, so all ApiResponse\r\n * properties are available.\r\n */\n\nvar ApiError =\n/*#__PURE__*/\n\n/** @class */\nfunction (_super) {\n  __extends(ApiError, _super);\n\n  function ApiError(context, message) {\n    var _this = _super.call(this, message) || this;\n\n    var request = context.request,\n        response = context.response;\n    _this.request = request;\n    _this.statusCode = response.statusCode;\n    _this.headers = response.headers;\n    _this.body = response.body;\n\n    if (typeof response.body === 'string' && response.body !== '') {\n      var JSON_1 = JSONBig();\n\n      try {\n        _this.result = JSON_1.parse(response.body);\n      } catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (console) {\n            // tslint:disable-next-line:no-console\n            console.warn(\"Unexpected error: Could not parse HTTP response body as JSON. \" + error.message);\n          }\n        }\n      }\n    }\n\n    return _this;\n  }\n\n  return ApiError;\n}(Error);\n\nexport { ApiError };"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,QAAQ,GACZ;;AAEA;AACA,UAAUC,MAAM,EAAE;EAChBH,SAAS,CAACE,QAAQ,EAAEC,MAAM,CAAC;EAE3B,SAASD,QAAQA,CAACE,OAAO,EAAEC,OAAO,EAAE;IAClC,IAAIC,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAC,IAAI,EAAEF,OAAO,CAAC,IAAI,IAAI;IAE9C,IAAIG,OAAO,GAAGJ,OAAO,CAACI,OAAO;MACzBC,QAAQ,GAAGL,OAAO,CAACK,QAAQ;IAC/BH,KAAK,CAACE,OAAO,GAAGA,OAAO;IACvBF,KAAK,CAACI,UAAU,GAAGD,QAAQ,CAACC,UAAU;IACtCJ,KAAK,CAACK,OAAO,GAAGF,QAAQ,CAACE,OAAO;IAChCL,KAAK,CAACM,IAAI,GAAGH,QAAQ,CAACG,IAAI;IAE1B,IAAI,OAAOH,QAAQ,CAACG,IAAI,KAAK,QAAQ,IAAIH,QAAQ,CAACG,IAAI,KAAK,EAAE,EAAE;MAC7D,IAAIC,MAAM,GAAGZ,OAAO,EAAE;MAEtB,IAAI;QACFK,KAAK,CAACQ,MAAM,GAAGD,MAAM,CAACE,KAAK,CAACN,QAAQ,CAACG,IAAI,CAAC;MAC5C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACd,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzC,IAAIC,OAAO,EAAE;YACX;YACAA,OAAO,CAACC,IAAI,CAAC,gEAAgE,GAAGL,KAAK,CAACX,OAAO,CAAC;UAChG;QACF;MACF;IACF;IAEA,OAAOC,KAAK;EACd;EAEA,OAAOJ,QAAQ;AACjB,CAAC,CAACoB,KAAK,CAAC;AAER,SAASpB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}