{"ast":null,"code":"import { __values } from 'tslib';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Set a header in the headers map.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n * @param value Header value\r\n */\n\nfunction setHeader(headers, name, value) {\n  var realHeaderName = lookupCaseInsensitive(headers, name);\n  setHeaderInternal(headers, realHeaderName, name, value);\n}\nfunction setHeaderInternal(headers, realHeaderName, name, value) {\n  if (realHeaderName) {\n    delete headers[realHeaderName];\n  }\n  if (value) {\n    headers[name] = value;\n  }\n}\n/**\r\n * Set a header in the headers map if it is not already set.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n * @param value Header value\r\n */\n\nfunction setHeaderIfNotSet(headers, name, value) {\n  var realHeaderName = lookupCaseInsensitive(headers, name);\n  if (!realHeaderName) {\n    setHeaderInternal(headers, realHeaderName, name, value);\n  }\n}\n/**\r\n * Get header from a map of headers.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n */\n\nfunction getHeader(headers, name) {\n  var prop = lookupCaseInsensitive(headers, name);\n  if (prop) {\n    return headers[prop];\n  }\n  return null;\n}\n/**\r\n * Looks up and returns the matching property name from the object.\r\n *\r\n * This method returns the matching property name in the object which might or might\r\n * not have the same case as the prop argument.\r\n *\r\n * @param obj Object with string property names\r\n * @param prop Property to lookup\r\n */\n\nfunction lookupCaseInsensitive(obj, prop) {\n  prop = prop.toLowerCase();\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && prop === p.toLowerCase()) {\n      return p;\n    }\n  }\n  return null;\n}\n/**\r\n * Merge headers\r\n *\r\n * Header names are compared using case-insensitive comparison. This method\r\n * preserves the original header name. If the headersToMerge overrides an existing\r\n * header, then the new header name (with its casing) is used.\r\n *\r\n * @param headers Headers to merge into\r\n * @param headersToMerge Headers to set\r\n */\n\nfunction mergeHeaders(headers, headersToMerge) {\n  var e_1, _a, e_2, _b;\n  var headerKeys = {};\n  try {\n    // Create a map of lower-cased-header-name to original-header-names\n    for (var _c = __values(Object.getOwnPropertyNames(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n      var headerName = _d.value;\n      headerKeys[headerName.toLowerCase()] = headerName;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  try {\n    // Override headers with new values\n    for (var _e = __values(Object.getOwnPropertyNames(headersToMerge)), _f = _e.next(); !_f.done; _f = _e.next()) {\n      var headerName = _f.value;\n      var lowerCasedName = headerName.toLowerCase();\n      if (headerKeys[lowerCasedName]) {\n        delete headers[headerKeys[lowerCasedName]];\n      }\n      headerKeys[lowerCasedName] = headerName;\n      headers[headerName] = headersToMerge[headerName];\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n}\n/**\r\n * Assert headers object is valid\r\n */\n\nfunction assertHeaders(headers) {\n  var e_3, _a;\n  if (headers === null || typeof headers !== 'object') {\n    throw new TypeError('Headers must be an object.');\n  }\n  try {\n    for (var _b = __values(Object.getOwnPropertyNames(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n      if (!isValidHeaderName(headerName)) {\n        throw new Error(\"\\\"\" + headerName + \"\\\" is not a valid header name.\");\n      }\n      var headerValue = headers[headerName];\n      if (typeof headerValue !== 'string') {\n        throw new TypeError(\"Header value must be string but \" + typeof headerValue + \" provided.\");\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n}\n/**\r\n * Return true if header name is valid\r\n * @param headerName Header name\r\n */\n\nfunction isValidHeaderName(headerName) {\n  return /^[\\w!#$%&'*+.^`|~-]+$/.test(headerName);\n}\nvar CONTENT_TYPE_HEADER = 'content-type';\nvar ACCEPT_HEADER = 'accept';\nvar CONTENT_LENGTH_HEADER = 'content-length';\nvar AUTHORIZATION_HEADER = 'authorization';\nvar FORM_URLENCODED_CONTENT_TYPE = 'application/x-www-form-urlencoded';\nvar JSON_CONTENT_TYPE = 'application/json';\nvar TEXT_CONTENT_TYPE = 'text/plain; charset=utf-8';\nvar XML_CONTENT_TYPE = 'application/xml';\nexport { ACCEPT_HEADER, AUTHORIZATION_HEADER, CONTENT_LENGTH_HEADER, CONTENT_TYPE_HEADER, FORM_URLENCODED_CONTENT_TYPE, JSON_CONTENT_TYPE, TEXT_CONTENT_TYPE, XML_CONTENT_TYPE, assertHeaders, getHeader, isValidHeaderName, lookupCaseInsensitive, mergeHeaders, setHeader, setHeaderIfNotSet };","map":{"version":3,"names":["__values","setHeader","headers","name","value","realHeaderName","lookupCaseInsensitive","setHeaderInternal","setHeaderIfNotSet","getHeader","prop","obj","toLowerCase","p","Object","prototype","hasOwnProperty","call","mergeHeaders","headersToMerge","e_1","_a","e_2","_b","headerKeys","_c","getOwnPropertyNames","_d","next","done","headerName","e_1_1","error","return","_e","_f","lowerCasedName","e_2_1","assertHeaders","e_3","TypeError","isValidHeaderName","Error","headerValue","e_3_1","test","CONTENT_TYPE_HEADER","ACCEPT_HEADER","CONTENT_LENGTH_HEADER","AUTHORIZATION_HEADER","FORM_URLENCODED_CONTENT_TYPE","JSON_CONTENT_TYPE","TEXT_CONTENT_TYPE","XML_CONTENT_TYPE"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/core/es/http/httpHeaders.js"],"sourcesContent":["import { __values } from 'tslib';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Set a header in the headers map.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n * @param value Header value\r\n */\n\nfunction setHeader(headers, name, value) {\n  var realHeaderName = lookupCaseInsensitive(headers, name);\n  setHeaderInternal(headers, realHeaderName, name, value);\n}\n\nfunction setHeaderInternal(headers, realHeaderName, name, value) {\n  if (realHeaderName) {\n    delete headers[realHeaderName];\n  }\n\n  if (value) {\n    headers[name] = value;\n  }\n}\n/**\r\n * Set a header in the headers map if it is not already set.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n * @param value Header value\r\n */\n\n\nfunction setHeaderIfNotSet(headers, name, value) {\n  var realHeaderName = lookupCaseInsensitive(headers, name);\n\n  if (!realHeaderName) {\n    setHeaderInternal(headers, realHeaderName, name, value);\n  }\n}\n/**\r\n * Get header from a map of headers.\r\n *\r\n * This method performs case-insensitive handling of header names.\r\n *\r\n * @param headers Map of headers\r\n * @param name Header name\r\n */\n\n\nfunction getHeader(headers, name) {\n  var prop = lookupCaseInsensitive(headers, name);\n\n  if (prop) {\n    return headers[prop];\n  }\n\n  return null;\n}\n/**\r\n * Looks up and returns the matching property name from the object.\r\n *\r\n * This method returns the matching property name in the object which might or might\r\n * not have the same case as the prop argument.\r\n *\r\n * @param obj Object with string property names\r\n * @param prop Property to lookup\r\n */\n\n\nfunction lookupCaseInsensitive(obj, prop) {\n  prop = prop.toLowerCase();\n\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && prop === p.toLowerCase()) {\n      return p;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Merge headers\r\n *\r\n * Header names are compared using case-insensitive comparison. This method\r\n * preserves the original header name. If the headersToMerge overrides an existing\r\n * header, then the new header name (with its casing) is used.\r\n *\r\n * @param headers Headers to merge into\r\n * @param headersToMerge Headers to set\r\n */\n\n\nfunction mergeHeaders(headers, headersToMerge) {\n  var e_1, _a, e_2, _b;\n\n  var headerKeys = {};\n\n  try {\n    // Create a map of lower-cased-header-name to original-header-names\n    for (var _c = __values(Object.getOwnPropertyNames(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n      var headerName = _d.value;\n      headerKeys[headerName.toLowerCase()] = headerName;\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  try {\n    // Override headers with new values\n    for (var _e = __values(Object.getOwnPropertyNames(headersToMerge)), _f = _e.next(); !_f.done; _f = _e.next()) {\n      var headerName = _f.value;\n      var lowerCasedName = headerName.toLowerCase();\n\n      if (headerKeys[lowerCasedName]) {\n        delete headers[headerKeys[lowerCasedName]];\n      }\n\n      headerKeys[lowerCasedName] = headerName;\n      headers[headerName] = headersToMerge[headerName];\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n}\n/**\r\n * Assert headers object is valid\r\n */\n\n\nfunction assertHeaders(headers) {\n  var e_3, _a;\n\n  if (headers === null || typeof headers !== 'object') {\n    throw new TypeError('Headers must be an object.');\n  }\n\n  try {\n    for (var _b = __values(Object.getOwnPropertyNames(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n\n      if (!isValidHeaderName(headerName)) {\n        throw new Error(\"\\\"\" + headerName + \"\\\" is not a valid header name.\");\n      }\n\n      var headerValue = headers[headerName];\n\n      if (typeof headerValue !== 'string') {\n        throw new TypeError(\"Header value must be string but \" + typeof headerValue + \" provided.\");\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n}\n/**\r\n * Return true if header name is valid\r\n * @param headerName Header name\r\n */\n\n\nfunction isValidHeaderName(headerName) {\n  return /^[\\w!#$%&'*+.^`|~-]+$/.test(headerName);\n}\n\nvar CONTENT_TYPE_HEADER = 'content-type';\nvar ACCEPT_HEADER = 'accept';\nvar CONTENT_LENGTH_HEADER = 'content-length';\nvar AUTHORIZATION_HEADER = 'authorization';\nvar FORM_URLENCODED_CONTENT_TYPE = 'application/x-www-form-urlencoded';\nvar JSON_CONTENT_TYPE = 'application/json';\nvar TEXT_CONTENT_TYPE = 'text/plain; charset=utf-8';\nvar XML_CONTENT_TYPE = 'application/xml';\nexport { ACCEPT_HEADER, AUTHORIZATION_HEADER, CONTENT_LENGTH_HEADER, CONTENT_TYPE_HEADER, FORM_URLENCODED_CONTENT_TYPE, JSON_CONTENT_TYPE, TEXT_CONTENT_TYPE, XML_CONTENT_TYPE, assertHeaders, getHeader, isValidHeaderName, lookupCaseInsensitive, mergeHeaders, setHeader, setHeaderIfNotSet };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}