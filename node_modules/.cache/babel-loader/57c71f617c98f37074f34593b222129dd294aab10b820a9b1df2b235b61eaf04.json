{"ast":null,"code":"import { detect } from 'detect-browser';\nimport warning from 'tiny-warning';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Validates the protocol and removes duplicate forward slashes\r\n *\r\n * @param url URL to clean\r\n * @returns Sanitized URL\r\n */\n\nfunction sanitizeUrl(url) {\n  // ensure that the urls are absolute\n  var protocolRegex = /^https?:\\/\\/[^/]+/;\n  var match = url.match(protocolRegex);\n  if (match === null) {\n    throw new Error(\"Invalid URL format: \" + url);\n  } // remove redundant double-forward slashes\n\n  var protocol = match[0];\n  var queryUrl = url.substring(protocol.length).replace(/\\/\\/+/g, '/');\n  return protocol + queryUrl;\n}\n/**\r\n * Check whether value is an instance of Blob\r\n *\r\n * @remark\r\n * Reference: https://github.com/sindresorhus/is-blob/blob/master/index.js\r\n *\r\n * @param value Value to check\r\n * @returns True if the value is a Blob instance\r\n */\n\nfunction isBlob(value) {\n  if (typeof Blob === 'undefined') {\n    return false;\n  }\n  return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n} // This is used by deprecated() to keep track of \"hits\".\n\nvar deprecatedHits = {};\n/**\r\n * Create warning for deprecated method usage.\r\n *\r\n * This is called once per deprecated method. If this method is called again\r\n * with the same arguments, no warning is generated.\r\n *\r\n * @param methodName Method name for deprecated method\r\n * @param notice Optional message for deprecation\r\n */\n\nfunction deprecated(methodName, notice) {\n  var message = \"Method \" + methodName + \" is deprecated.\";\n  if (notice) {\n    message += \" \" + notice;\n  }\n  if (deprecatedHits[message]) {\n    return;\n  }\n  deprecatedHits[message] = true;\n  if (process.env.NODE_ENV !== 'production') {\n    warning(false, message);\n  }\n}\n/**\r\n * Replace the templated placeholders in user-agent with the platform\r\n * related information.\r\n * @param userAgent User-agent value to be updated\r\n * @returns Updated user-agent value\r\n */\n\nfunction updateUserAgent(userAgent, apiVersion, detail) {\n  var updatedAgent = userAgent;\n  var result = detect();\n  if (result) {\n    updatedAgent = updatedAgent.replace('{engine}', result.name);\n  }\n  if (result === null || result === void 0 ? void 0 : result.version) {\n    updatedAgent = updatedAgent.replace('{engine-version}', result.version);\n  }\n  if (result === null || result === void 0 ? void 0 : result.os) {\n    updatedAgent = updatedAgent.replace('{os-info}', result.os);\n  }\n  if (typeof apiVersion !== 'undefined') {\n    updatedAgent = updatedAgent.replace('{api-version}', apiVersion);\n  }\n  if (typeof detail !== 'undefined') {\n    assertUserAgentDetail(detail);\n    updatedAgent = updatedAgent.replace('{detail}', encodeURIComponent(detail));\n  }\n  return updatedAgent;\n}\nfunction assertUserAgentDetail(detail) {\n  if (detail.length > 128) {\n    throw new Error('userAgentDetail length exceeds 128 characters limit');\n  }\n}\nexport { deprecated, isBlob, sanitizeUrl, updateUserAgent };","map":{"version":3,"names":["detect","warning","sanitizeUrl","url","protocolRegex","match","Error","protocol","queryUrl","substring","length","replace","isBlob","value","Blob","Object","prototype","toString","call","deprecatedHits","deprecated","methodName","notice","message","process","env","NODE_ENV","updateUserAgent","userAgent","apiVersion","detail","updatedAgent","result","name","version","os","assertUserAgentDetail","encodeURIComponent"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/core/es/apiHelper.js"],"sourcesContent":["import { detect } from 'detect-browser';\nimport warning from 'tiny-warning';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Validates the protocol and removes duplicate forward slashes\r\n *\r\n * @param url URL to clean\r\n * @returns Sanitized URL\r\n */\n\nfunction sanitizeUrl(url) {\n  // ensure that the urls are absolute\n  var protocolRegex = /^https?:\\/\\/[^/]+/;\n  var match = url.match(protocolRegex);\n\n  if (match === null) {\n    throw new Error(\"Invalid URL format: \" + url);\n  } // remove redundant double-forward slashes\n\n\n  var protocol = match[0];\n  var queryUrl = url.substring(protocol.length).replace(/\\/\\/+/g, '/');\n  return protocol + queryUrl;\n}\n/**\r\n * Check whether value is an instance of Blob\r\n *\r\n * @remark\r\n * Reference: https://github.com/sindresorhus/is-blob/blob/master/index.js\r\n *\r\n * @param value Value to check\r\n * @returns True if the value is a Blob instance\r\n */\n\n\nfunction isBlob(value) {\n  if (typeof Blob === 'undefined') {\n    return false;\n  }\n\n  return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n} // This is used by deprecated() to keep track of \"hits\".\n\n\nvar deprecatedHits = {};\n/**\r\n * Create warning for deprecated method usage.\r\n *\r\n * This is called once per deprecated method. If this method is called again\r\n * with the same arguments, no warning is generated.\r\n *\r\n * @param methodName Method name for deprecated method\r\n * @param notice Optional message for deprecation\r\n */\n\nfunction deprecated(methodName, notice) {\n  var message = \"Method \" + methodName + \" is deprecated.\";\n\n  if (notice) {\n    message += \" \" + notice;\n  }\n\n  if (deprecatedHits[message]) {\n    return;\n  }\n\n  deprecatedHits[message] = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(false, message);\n  }\n}\n/**\r\n * Replace the templated placeholders in user-agent with the platform\r\n * related information.\r\n * @param userAgent User-agent value to be updated\r\n * @returns Updated user-agent value\r\n */\n\n\nfunction updateUserAgent(userAgent, apiVersion, detail) {\n  var updatedAgent = userAgent;\n  var result = detect();\n\n  if (result) {\n    updatedAgent = updatedAgent.replace('{engine}', result.name);\n  }\n\n  if (result === null || result === void 0 ? void 0 : result.version) {\n    updatedAgent = updatedAgent.replace('{engine-version}', result.version);\n  }\n\n  if (result === null || result === void 0 ? void 0 : result.os) {\n    updatedAgent = updatedAgent.replace('{os-info}', result.os);\n  }\n\n  if (typeof apiVersion !== 'undefined') {\n    updatedAgent = updatedAgent.replace('{api-version}', apiVersion);\n  }\n\n  if (typeof detail !== 'undefined') {\n    assertUserAgentDetail(detail);\n    updatedAgent = updatedAgent.replace('{detail}', encodeURIComponent(detail));\n  }\n\n  return updatedAgent;\n}\n\nfunction assertUserAgentDetail(detail) {\n  if (detail.length > 128) {\n    throw new Error('userAgentDetail length exceeds 128 characters limit');\n  }\n}\n\nexport { deprecated, isBlob, sanitizeUrl, updateUserAgent };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}