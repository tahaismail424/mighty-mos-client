{"ast":null,"code":"import { literalToString } from '../utils.js';\n/**\r\n * Create a 'defaults' schema.\r\n *\r\n * During mapping or unmapping, if the value is null or undefined, the schema\r\n * defaults to the 'defaultValue' specified in the schema.\r\n */\n\nfunction defaults(schema, defaultValue) {\n  return {\n    type: function () {\n      return \"Defaults<\" + schema.type() + \",\" + literalToString(defaultValue) + \">\";\n    },\n    validateBeforeMap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMap(v, ctxt);\n    },\n    validateBeforeUnmap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeUnmap(v, ctxt);\n    },\n    map: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.map(v, ctxt);\n    },\n    unmap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.unmap(v, ctxt);\n    },\n    validateBeforeMapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMapXml(v, ctxt);\n    },\n    mapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.mapXml(v, ctxt);\n    },\n    unmapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.unmapXml(v, ctxt);\n    }\n  };\n}\nfunction shouldDefault(value, defaultValue) {\n  return value === null || value === undefined || value === defaultValue;\n}\nexport { defaults };","map":{"version":3,"names":["literalToString","defaults","schema","defaultValue","type","validateBeforeMap","v","ctxt","shouldDefault","validateBeforeUnmap","map","unmap","validateBeforeMapXml","mapXml","unmapXml","value","undefined"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/schema/es/types/defaults.js"],"sourcesContent":["import { literalToString } from '../utils.js';\n/**\r\n * Create a 'defaults' schema.\r\n *\r\n * During mapping or unmapping, if the value is null or undefined, the schema\r\n * defaults to the 'defaultValue' specified in the schema.\r\n */\n\nfunction defaults(schema, defaultValue) {\n  return {\n    type: function () {\n      return \"Defaults<\" + schema.type() + \",\" + literalToString(defaultValue) + \">\";\n    },\n    validateBeforeMap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMap(v, ctxt);\n    },\n    validateBeforeUnmap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeUnmap(v, ctxt);\n    },\n    map: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.map(v, ctxt);\n    },\n    unmap: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.unmap(v, ctxt);\n    },\n    validateBeforeMapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMapXml(v, ctxt);\n    },\n    mapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.mapXml(v, ctxt);\n    },\n    unmapXml: function (v, ctxt) {\n      return shouldDefault(v, defaultValue) ? defaultValue : schema.unmapXml(v, ctxt);\n    }\n  };\n}\n\nfunction shouldDefault(value, defaultValue) {\n  return value === null || value === undefined || value === defaultValue;\n}\n\nexport { defaults };"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAQA,CAACC,MAAM,EAAEC,YAAY,EAAE;EACtC,OAAO;IACLC,IAAI,EAAE,SAAAA,CAAA,EAAY;MAChB,OAAO,WAAW,GAAGF,MAAM,CAACE,IAAI,EAAE,GAAG,GAAG,GAAGJ,eAAe,CAACG,YAAY,CAAC,GAAG,GAAG;IAChF,CAAC;IACDE,iBAAiB,EAAE,SAAAA,CAAUC,CAAC,EAAEC,IAAI,EAAE;MACpC,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAG,EAAE,GAAGD,MAAM,CAACG,iBAAiB,CAACC,CAAC,EAAEC,IAAI,CAAC;IAChF,CAAC;IACDE,mBAAmB,EAAE,SAAAA,CAAUH,CAAC,EAAEC,IAAI,EAAE;MACtC,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAG,EAAE,GAAGD,MAAM,CAACO,mBAAmB,CAACH,CAAC,EAAEC,IAAI,CAAC;IAClF,CAAC;IACDG,GAAG,EAAE,SAAAA,CAAUJ,CAAC,EAAEC,IAAI,EAAE;MACtB,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAGA,YAAY,GAAGD,MAAM,CAACQ,GAAG,CAACJ,CAAC,EAAEC,IAAI,CAAC;IAC5E,CAAC;IACDI,KAAK,EAAE,SAAAA,CAAUL,CAAC,EAAEC,IAAI,EAAE;MACxB,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAGA,YAAY,GAAGD,MAAM,CAACS,KAAK,CAACL,CAAC,EAAEC,IAAI,CAAC;IAC9E,CAAC;IACDK,oBAAoB,EAAE,SAAAA,CAAUN,CAAC,EAAEC,IAAI,EAAE;MACvC,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAG,EAAE,GAAGD,MAAM,CAACU,oBAAoB,CAACN,CAAC,EAAEC,IAAI,CAAC;IACnF,CAAC;IACDM,MAAM,EAAE,SAAAA,CAAUP,CAAC,EAAEC,IAAI,EAAE;MACzB,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAGA,YAAY,GAAGD,MAAM,CAACW,MAAM,CAACP,CAAC,EAAEC,IAAI,CAAC;IAC/E,CAAC;IACDO,QAAQ,EAAE,SAAAA,CAAUR,CAAC,EAAEC,IAAI,EAAE;MAC3B,OAAOC,aAAa,CAACF,CAAC,EAAEH,YAAY,CAAC,GAAGA,YAAY,GAAGD,MAAM,CAACY,QAAQ,CAACR,CAAC,EAAEC,IAAI,CAAC;IACjF;EACF,CAAC;AACH;AAEA,SAASC,aAAaA,CAACO,KAAK,EAAEZ,YAAY,EAAE;EAC1C,OAAOY,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAKZ,YAAY;AACxE;AAEA,SAASF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}