{"ast":null,"code":"import { __rest, __spreadArray, __read, __assign } from 'tslib';\nimport { objectKeyEncode, omitKeysFromObject, objectEntries, literalToString } from '../utils.js';\n/**\r\n * Create a Strict Object type schema.\r\n *\r\n * A strict-object does not allow additional properties during mapping or\r\n * unmapping. Additional properties will result in a validation error.\r\n */\n\nfunction strictObject(objectSchema) {\n  var schema = internalObject(objectSchema, false, false);\n  schema.type = function () {\n    return \"StrictObject<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n  return schema;\n}\n/**\r\n * Create an Expandable Object type schema.\r\n *\r\n * The object schema allows additional properties during mapping and unmapping. The\r\n * additional properties are copied over as is.\r\n */\n\nfunction expandoObject(objectSchema) {\n  return internalObject(objectSchema, true, true);\n}\n/**\r\n * Create an Object Type schema.\r\n *\r\n * The Object schema allows additional properties during mapping and unmapping\r\n * but discards them.\r\n */\n\nfunction object(objectSchema) {\n  var schema = internalObject(objectSchema, true, false);\n  schema.type = function () {\n    return \"Object<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n  return schema;\n}\n/**\r\n * Create a strict-object schema that extends an existing schema.\r\n */\n\nfunction extendStrictObject(parentObjectSchema, objectSchema) {\n  return strictObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an object schema that extends an existing schema.\r\n */\n\nfunction extendExpandoObject(parentObjectSchema, objectSchema) {\n  return expandoObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an Object schema that extends an existing object schema.\r\n */\n\nfunction extendObject(parentObjectSchema, objectSchema) {\n  return object(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Internal utility to create object schema with different options.\r\n */\n\nfunction internalObject(objectSchema, skipValidateAdditionalProps, mapAdditionalProps) {\n  var keys = Object.keys(objectSchema);\n  var reverseObjectSchema = createReverseObjectSchema(objectSchema);\n  var xmlMappingInfo = getXmlPropMappingForObjectSchema(objectSchema);\n  var xmlObjectSchema = createXmlObjectSchema(objectSchema);\n  var reverseXmlObjectSchema = createReverseXmlObjectSchema(xmlObjectSchema);\n  return {\n    type: function () {\n      return \"Object<{\" + keys.map(objectKeyEncode).join(',') + \",...}>\";\n    },\n    validateBeforeMap: validateObject(objectSchema, 'validateBeforeMap', skipValidateAdditionalProps),\n    validateBeforeUnmap: validateObject(reverseObjectSchema, 'validateBeforeUnmap', skipValidateAdditionalProps),\n    map: mapObject(objectSchema, 'map', mapAdditionalProps),\n    unmap: mapObject(reverseObjectSchema, 'unmap', mapAdditionalProps),\n    validateBeforeMapXml: validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, skipValidateAdditionalProps),\n    mapXml: mapObjectFromXml(xmlObjectSchema, mapAdditionalProps),\n    unmapXml: unmapObjectToXml(reverseXmlObjectSchema, mapAdditionalProps),\n    objectSchema: objectSchema\n  };\n}\nfunction validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, allowAdditionalProperties) {\n  var elementsToProps = xmlMappingInfo.elementsToProps,\n    attributesToProps = xmlMappingInfo.attributesToProps;\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n    var valueObject = value;\n    var attrs = valueObject.$,\n      elements = __rest(valueObject, [\"$\"]);\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {}; // Validate all known elements and attributes using the schema\n\n    return __spreadArray(__spreadArray([], __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'child elements',\n      propTypePrefix: 'element',\n      valueTypeName: 'element',\n      propMapping: elementsToProps,\n      objectSchema: objectSchema,\n      valueObject: elements,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    }))), __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'attributes',\n      propTypePrefix: '@',\n      valueTypeName: 'element',\n      propMapping: attributesToProps,\n      objectSchema: objectSchema,\n      valueObject: attributes,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    })));\n  };\n}\nfunction mapObjectFromXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n    attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'mapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'mapXml', false // Always false; additional attributes are handled differently below.\n  ); // These are later used to omit know attribute props from the attributes object\n  // so that the remaining props can be copied over as additional props.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n    _b[0];\n    var _c = __read(_b[1], 1),\n      name = _c[0];\n    return name;\n  });\n  return function (value, ctxt) {\n    var valueObject = value;\n    var attrs = valueObject.$,\n      elements = __rest(valueObject, [\"$\"]);\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {};\n    var output = __assign(__assign({}, mapAttributes(attributes, ctxt)), mapElements(elements, ctxt));\n    if (allowAdditionalProps) {\n      // Omit known attributes and copy the rest as additional attributes.\n      var additionalAttrs = omitKeysFromObject(attributes, attributeKeys);\n      if (Object.keys(additionalAttrs).length > 0) {\n        // These additional attrs are set in the '$' property by convention.\n        output.$ = additionalAttrs;\n      }\n    }\n    return output;\n  };\n}\nfunction unmapObjectToXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n    attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'unmapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'unmapXml', false // Always false so that element props are not copied during mapping\n  ); // These are later used to omit attribute props from the value object so that they\n  // do not get mapped during element mapping, if the allowAdditionalProps is true.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n    _b[0];\n    var _c = __read(_b[1], 1),\n      name = _c[0];\n    return name;\n  });\n  return function (value, ctxt) {\n    // Get additional attributes which are set in the '$' property by convention\n    var _a = value,\n      attributes = _a.$,\n      rest = __rest(_a, [\"$\"]); // Ensure 'attributes' is an object and non-null\n\n    var additionalAttributes = typeof attributes === 'object' && attributes !== null && allowAdditionalProps ? attributes : {};\n    return __assign(__assign({}, mapElements(omitKeysFromObject(rest, attributeKeys), ctxt)), {\n      $: __assign(__assign({}, additionalAttributes), mapAttributes(value, ctxt))\n    });\n  };\n}\nfunction validateValueObject(_a) {\n  var validationMethod = _a.validationMethod,\n    propTypeName = _a.propTypeName,\n    propTypePrefix = _a.propTypePrefix,\n    valueTypeName = _a.valueTypeName,\n    propMapping = _a.propMapping,\n    objectSchema = _a.objectSchema,\n    valueObject = _a.valueObject,\n    ctxt = _a.ctxt,\n    allowAdditionalProperties = _a.allowAdditionalProperties;\n  var errors = [];\n  var missingProps = new Set();\n  var unknownProps = new Set(Object.keys(valueObject)); // Validate all known properties using the schema\n\n  for (var key in propMapping) {\n    if (Object.prototype.hasOwnProperty.call(propMapping, key)) {\n      var propName = propMapping[key];\n      var schema = objectSchema[propName][1];\n      unknownProps.delete(key);\n      if (key in valueObject) {\n        errors.push.apply(errors, __spreadArray([], __read(schema[validationMethod](valueObject[key], ctxt.createChild(propTypePrefix + key, valueObject[key], schema)))));\n      } else if (schema.type().indexOf('Optional<') !== 0) {\n        // Add to missing keys if it is not an optional property\n        missingProps.add(key);\n      }\n    }\n  } // Create validation error for unknown properties encountered\n\n  var unknownPropsArray = Array.from(unknownProps);\n  if (unknownPropsArray.length > 0 && !allowAdditionalProperties) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some unknown \" + propTypeName + \" were found in the \" + valueTypeName + \": \" + unknownPropsArray.map(literalToString).join(', ') + \".\"))));\n  } // Create validation error for missing required properties\n\n  var missingPropsArray = Array.from(missingProps);\n  if (missingPropsArray.length > 0) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some \" + propTypeName + \" are missing in the \" + valueTypeName + \": \" + missingPropsArray.map(literalToString).join(', ') + \".\"))));\n  }\n  return errors;\n}\nfunction validateObject(objectSchema, validationMethod, allowAdditionalProperties) {\n  var propsMapping = getPropMappingForObjectSchema(objectSchema);\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n    return validateValueObject({\n      validationMethod: validationMethod,\n      propTypeName: 'properties',\n      propTypePrefix: '',\n      valueTypeName: 'object',\n      propMapping: propsMapping,\n      objectSchema: objectSchema,\n      valueObject: value,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    });\n  };\n}\nfunction mapObject(objectSchema, mappingFn, allowAdditionalProperties) {\n  return function (value, ctxt) {\n    var output = {};\n    var objectValue = value;\n    /** Properties seen in the object but not in the schema */\n\n    var unknownKeys = new Set(Object.keys(objectValue)); // Map known properties using the schema\n\n    for (var key in objectSchema) {\n      /* istanbul ignore else */\n      if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n        var element = objectSchema[key];\n        var propName = element[0];\n        var propValue = objectValue[propName];\n        unknownKeys.delete(propName); // Skip mapping for optional properties to avoid creating properties with value 'undefined'\n\n        if (element[1].type().indexOf('Optional<') !== 0 || propValue !== undefined) {\n          output[key] = element[1][mappingFn](propValue, ctxt.createChild(propName, propValue, element[1]));\n        }\n      }\n    } // Copy unknown properties over if additional properties flag is set\n\n    if (allowAdditionalProperties) {\n      unknownKeys.forEach(function (unknownKey) {\n        output[unknownKey] = objectValue[unknownKey];\n      });\n    }\n    return output;\n  };\n}\nfunction getXmlPropMappingForObjectSchema(objectSchema) {\n  var _a, _b;\n  var elementsToProps = {};\n  var attributesToProps = {};\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var _c = __read(objectSchema[key], 3),\n        propName = _c[0],\n        xmlOptions = _c[2];\n      if ((xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) === true) {\n        attributesToProps[(_a = xmlOptions.xmlName) !== null && _a !== void 0 ? _a : propName] = key;\n      } else {\n        elementsToProps[(_b = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _b !== void 0 ? _b : propName] = key;\n      }\n    }\n  }\n  return {\n    elementsToProps: elementsToProps,\n    attributesToProps: attributesToProps\n  };\n}\nfunction getPropMappingForObjectSchema(objectSchema) {\n  var propsMapping = {};\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var propDef = objectSchema[key];\n      propsMapping[propDef[0]] = key;\n    }\n  }\n  return propsMapping;\n}\nfunction createReverseObjectSchema(objectSchema) {\n  var reverseObjectSchema = {};\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n      reverseObjectSchema[element[0]] = [key, element[1], element[2]];\n    }\n  }\n  return reverseObjectSchema;\n}\nfunction createXmlObjectSchema(objectSchema) {\n  var _a;\n  var elementsSchema = {};\n  var attributesSchema = {};\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n      var _b = __read(element, 3),\n        serializedName = _b[0],\n        schema = _b[1],\n        xmlOptions = _b[2];\n      var xmlObjectSchema = (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) ? attributesSchema : elementsSchema;\n      xmlObjectSchema[key] = [(_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : serializedName, schema, xmlOptions];\n    }\n  }\n  return {\n    elementsSchema: elementsSchema,\n    attributesSchema: attributesSchema\n  };\n}\nfunction createReverseXmlObjectSchema(xmlObjectSchema) {\n  return {\n    attributesSchema: createReverseObjectSchema(xmlObjectSchema.attributesSchema),\n    elementsSchema: createReverseObjectSchema(xmlObjectSchema.elementsSchema)\n  };\n}\nexport { expandoObject, extendExpandoObject, extendObject, extendStrictObject, object, strictObject };","map":{"version":3,"names":["__rest","__spreadArray","__read","__assign","objectKeyEncode","omitKeysFromObject","objectEntries","literalToString","strictObject","objectSchema","schema","internalObject","type","Object","keys","map","join","expandoObject","object","extendStrictObject","parentObjectSchema","extendExpandoObject","extendObject","skipValidateAdditionalProps","mapAdditionalProps","reverseObjectSchema","createReverseObjectSchema","xmlMappingInfo","getXmlPropMappingForObjectSchema","xmlObjectSchema","createXmlObjectSchema","reverseXmlObjectSchema","createReverseXmlObjectSchema","validateBeforeMap","validateObject","validateBeforeUnmap","mapObject","unmap","validateBeforeMapXml","validateObjectBeforeMapXml","mapXml","mapObjectFromXml","unmapXml","unmapObjectToXml","allowAdditionalProperties","elementsToProps","attributesToProps","value","ctxt","fail","valueObject","attrs","$","elements","attributes","validateValueObject","validationMethod","propTypeName","propTypePrefix","valueTypeName","propMapping","allowAdditionalProps","elementsSchema","attributesSchema","mapElements","mapAttributes","attributeKeys","_a","_b","_c","name","output","additionalAttrs","length","rest","additionalAttributes","errors","missingProps","Set","unknownProps","key","prototype","hasOwnProperty","call","propName","delete","push","apply","createChild","indexOf","add","unknownPropsArray","Array","from","missingPropsArray","propsMapping","getPropMappingForObjectSchema","mappingFn","objectValue","unknownKeys","element","propValue","undefined","forEach","unknownKey","xmlOptions","isAttr","xmlName","propDef","serializedName"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/schema/es/types/object.js"],"sourcesContent":["import { __rest, __spreadArray, __read, __assign } from 'tslib';\nimport { objectKeyEncode, omitKeysFromObject, objectEntries, literalToString } from '../utils.js';\n/**\r\n * Create a Strict Object type schema.\r\n *\r\n * A strict-object does not allow additional properties during mapping or\r\n * unmapping. Additional properties will result in a validation error.\r\n */\n\nfunction strictObject(objectSchema) {\n  var schema = internalObject(objectSchema, false, false);\n\n  schema.type = function () {\n    return \"StrictObject<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create an Expandable Object type schema.\r\n *\r\n * The object schema allows additional properties during mapping and unmapping. The\r\n * additional properties are copied over as is.\r\n */\n\n\nfunction expandoObject(objectSchema) {\n  return internalObject(objectSchema, true, true);\n}\n/**\r\n * Create an Object Type schema.\r\n *\r\n * The Object schema allows additional properties during mapping and unmapping\r\n * but discards them.\r\n */\n\n\nfunction object(objectSchema) {\n  var schema = internalObject(objectSchema, true, false);\n\n  schema.type = function () {\n    return \"Object<{\" + Object.keys(objectSchema).map(objectKeyEncode).join(',') + \"}>\";\n  };\n\n  return schema;\n}\n/**\r\n * Create a strict-object schema that extends an existing schema.\r\n */\n\n\nfunction extendStrictObject(parentObjectSchema, objectSchema) {\n  return strictObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an object schema that extends an existing schema.\r\n */\n\n\nfunction extendExpandoObject(parentObjectSchema, objectSchema) {\n  return expandoObject(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Create an Object schema that extends an existing object schema.\r\n */\n\n\nfunction extendObject(parentObjectSchema, objectSchema) {\n  return object(__assign(__assign({}, parentObjectSchema.objectSchema), objectSchema));\n}\n/**\r\n * Internal utility to create object schema with different options.\r\n */\n\n\nfunction internalObject(objectSchema, skipValidateAdditionalProps, mapAdditionalProps) {\n  var keys = Object.keys(objectSchema);\n  var reverseObjectSchema = createReverseObjectSchema(objectSchema);\n  var xmlMappingInfo = getXmlPropMappingForObjectSchema(objectSchema);\n  var xmlObjectSchema = createXmlObjectSchema(objectSchema);\n  var reverseXmlObjectSchema = createReverseXmlObjectSchema(xmlObjectSchema);\n  return {\n    type: function () {\n      return \"Object<{\" + keys.map(objectKeyEncode).join(',') + \",...}>\";\n    },\n    validateBeforeMap: validateObject(objectSchema, 'validateBeforeMap', skipValidateAdditionalProps),\n    validateBeforeUnmap: validateObject(reverseObjectSchema, 'validateBeforeUnmap', skipValidateAdditionalProps),\n    map: mapObject(objectSchema, 'map', mapAdditionalProps),\n    unmap: mapObject(reverseObjectSchema, 'unmap', mapAdditionalProps),\n    validateBeforeMapXml: validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, skipValidateAdditionalProps),\n    mapXml: mapObjectFromXml(xmlObjectSchema, mapAdditionalProps),\n    unmapXml: unmapObjectToXml(reverseXmlObjectSchema, mapAdditionalProps),\n    objectSchema: objectSchema\n  };\n}\n\nfunction validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, allowAdditionalProperties) {\n  var elementsToProps = xmlMappingInfo.elementsToProps,\n      attributesToProps = xmlMappingInfo.attributesToProps;\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {}; // Validate all known elements and attributes using the schema\n\n    return __spreadArray(__spreadArray([], __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'child elements',\n      propTypePrefix: 'element',\n      valueTypeName: 'element',\n      propMapping: elementsToProps,\n      objectSchema: objectSchema,\n      valueObject: elements,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    }))), __read(validateValueObject({\n      validationMethod: 'validateBeforeMapXml',\n      propTypeName: 'attributes',\n      propTypePrefix: '@',\n      valueTypeName: 'element',\n      propMapping: attributesToProps,\n      objectSchema: objectSchema,\n      valueObject: attributes,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    })));\n  };\n}\n\nfunction mapObjectFromXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'mapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'mapXml', false // Always false; additional attributes are handled differently below.\n  ); // These are later used to omit know attribute props from the attributes object\n  // so that the remaining props can be copied over as additional props.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    var valueObject = value;\n\n    var attrs = valueObject.$,\n        elements = __rest(valueObject, [\"$\"]);\n\n    var attributes = attrs !== null && attrs !== void 0 ? attrs : {};\n\n    var output = __assign(__assign({}, mapAttributes(attributes, ctxt)), mapElements(elements, ctxt));\n\n    if (allowAdditionalProps) {\n      // Omit known attributes and copy the rest as additional attributes.\n      var additionalAttrs = omitKeysFromObject(attributes, attributeKeys);\n\n      if (Object.keys(additionalAttrs).length > 0) {\n        // These additional attrs are set in the '$' property by convention.\n        output.$ = additionalAttrs;\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction unmapObjectToXml(xmlObjectSchema, allowAdditionalProps) {\n  var elementsSchema = xmlObjectSchema.elementsSchema,\n      attributesSchema = xmlObjectSchema.attributesSchema;\n  var mapElements = mapObject(elementsSchema, 'unmapXml', allowAdditionalProps);\n  var mapAttributes = mapObject(attributesSchema, 'unmapXml', false // Always false so that element props are not copied during mapping\n  ); // These are later used to omit attribute props from the value object so that they\n  // do not get mapped during element mapping, if the allowAdditionalProps is true.\n\n  var attributeKeys = objectEntries(attributesSchema).map(function (_a) {\n    var _b = __read(_a, 2);\n\n    _b[0];\n\n    var _c = __read(_b[1], 1),\n        name = _c[0];\n\n    return name;\n  });\n  return function (value, ctxt) {\n    // Get additional attributes which are set in the '$' property by convention\n    var _a = value,\n        attributes = _a.$,\n        rest = __rest(_a, [\"$\"]); // Ensure 'attributes' is an object and non-null\n\n\n    var additionalAttributes = typeof attributes === 'object' && attributes !== null && allowAdditionalProps ? attributes : {};\n    return __assign(__assign({}, mapElements(omitKeysFromObject(rest, attributeKeys), ctxt)), {\n      $: __assign(__assign({}, additionalAttributes), mapAttributes(value, ctxt))\n    });\n  };\n}\n\nfunction validateValueObject(_a) {\n  var validationMethod = _a.validationMethod,\n      propTypeName = _a.propTypeName,\n      propTypePrefix = _a.propTypePrefix,\n      valueTypeName = _a.valueTypeName,\n      propMapping = _a.propMapping,\n      objectSchema = _a.objectSchema,\n      valueObject = _a.valueObject,\n      ctxt = _a.ctxt,\n      allowAdditionalProperties = _a.allowAdditionalProperties;\n  var errors = [];\n  var missingProps = new Set();\n  var unknownProps = new Set(Object.keys(valueObject)); // Validate all known properties using the schema\n\n  for (var key in propMapping) {\n    if (Object.prototype.hasOwnProperty.call(propMapping, key)) {\n      var propName = propMapping[key];\n      var schema = objectSchema[propName][1];\n      unknownProps.delete(key);\n\n      if (key in valueObject) {\n        errors.push.apply(errors, __spreadArray([], __read(schema[validationMethod](valueObject[key], ctxt.createChild(propTypePrefix + key, valueObject[key], schema)))));\n      } else if (schema.type().indexOf('Optional<') !== 0) {\n        // Add to missing keys if it is not an optional property\n        missingProps.add(key);\n      }\n    }\n  } // Create validation error for unknown properties encountered\n\n\n  var unknownPropsArray = Array.from(unknownProps);\n\n  if (unknownPropsArray.length > 0 && !allowAdditionalProperties) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some unknown \" + propTypeName + \" were found in the \" + valueTypeName + \": \" + unknownPropsArray.map(literalToString).join(', ') + \".\"))));\n  } // Create validation error for missing required properties\n\n\n  var missingPropsArray = Array.from(missingProps);\n\n  if (missingPropsArray.length > 0) {\n    errors.push.apply(errors, __spreadArray([], __read(ctxt.fail(\"Some \" + propTypeName + \" are missing in the \" + valueTypeName + \": \" + missingPropsArray.map(literalToString).join(', ') + \".\"))));\n  }\n\n  return errors;\n}\n\nfunction validateObject(objectSchema, validationMethod, allowAdditionalProperties) {\n  var propsMapping = getPropMappingForObjectSchema(objectSchema);\n  return function (value, ctxt) {\n    if (typeof value !== 'object' || value === null) {\n      return ctxt.fail();\n    }\n\n    return validateValueObject({\n      validationMethod: validationMethod,\n      propTypeName: 'properties',\n      propTypePrefix: '',\n      valueTypeName: 'object',\n      propMapping: propsMapping,\n      objectSchema: objectSchema,\n      valueObject: value,\n      ctxt: ctxt,\n      allowAdditionalProperties: allowAdditionalProperties\n    });\n  };\n}\n\nfunction mapObject(objectSchema, mappingFn, allowAdditionalProperties) {\n  return function (value, ctxt) {\n    var output = {};\n    var objectValue = value;\n    /** Properties seen in the object but not in the schema */\n\n    var unknownKeys = new Set(Object.keys(objectValue)); // Map known properties using the schema\n\n    for (var key in objectSchema) {\n      /* istanbul ignore else */\n      if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n        var element = objectSchema[key];\n        var propName = element[0];\n        var propValue = objectValue[propName];\n        unknownKeys.delete(propName); // Skip mapping for optional properties to avoid creating properties with value 'undefined'\n\n        if (element[1].type().indexOf('Optional<') !== 0 || propValue !== undefined) {\n          output[key] = element[1][mappingFn](propValue, ctxt.createChild(propName, propValue, element[1]));\n        }\n      }\n    } // Copy unknown properties over if additional properties flag is set\n\n\n    if (allowAdditionalProperties) {\n      unknownKeys.forEach(function (unknownKey) {\n        output[unknownKey] = objectValue[unknownKey];\n      });\n    }\n\n    return output;\n  };\n}\n\nfunction getXmlPropMappingForObjectSchema(objectSchema) {\n  var _a, _b;\n\n  var elementsToProps = {};\n  var attributesToProps = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var _c = __read(objectSchema[key], 3),\n          propName = _c[0],\n          xmlOptions = _c[2];\n\n      if ((xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) === true) {\n        attributesToProps[(_a = xmlOptions.xmlName) !== null && _a !== void 0 ? _a : propName] = key;\n      } else {\n        elementsToProps[(_b = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _b !== void 0 ? _b : propName] = key;\n      }\n    }\n  }\n\n  return {\n    elementsToProps: elementsToProps,\n    attributesToProps: attributesToProps\n  };\n}\n\nfunction getPropMappingForObjectSchema(objectSchema) {\n  var propsMapping = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var propDef = objectSchema[key];\n      propsMapping[propDef[0]] = key;\n    }\n  }\n\n  return propsMapping;\n}\n\nfunction createReverseObjectSchema(objectSchema) {\n  var reverseObjectSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n      reverseObjectSchema[element[0]] = [key, element[1], element[2]];\n    }\n  }\n\n  return reverseObjectSchema;\n}\n\nfunction createXmlObjectSchema(objectSchema) {\n  var _a;\n\n  var elementsSchema = {};\n  var attributesSchema = {};\n\n  for (var key in objectSchema) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(objectSchema, key)) {\n      var element = objectSchema[key];\n\n      var _b = __read(element, 3),\n          serializedName = _b[0],\n          schema = _b[1],\n          xmlOptions = _b[2];\n\n      var xmlObjectSchema = (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) ? attributesSchema : elementsSchema;\n      xmlObjectSchema[key] = [(_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : serializedName, schema, xmlOptions];\n    }\n  }\n\n  return {\n    elementsSchema: elementsSchema,\n    attributesSchema: attributesSchema\n  };\n}\n\nfunction createReverseXmlObjectSchema(xmlObjectSchema) {\n  return {\n    attributesSchema: createReverseObjectSchema(xmlObjectSchema.attributesSchema),\n    elementsSchema: createReverseObjectSchema(xmlObjectSchema.elementsSchema)\n  };\n}\n\nexport { expandoObject, extendExpandoObject, extendObject, extendStrictObject, object, strictObject };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}