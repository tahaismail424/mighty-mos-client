{"ast":null,"code":"/**\r\n * Creates a nullable schema.\r\n *\r\n * The nullable schema allows null values or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction nullable(schema) {\n  return {\n    type: function () {\n      return \"Nullable<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function (value, ctxt) {\n      return value === null ? null : schema.map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return value === null ? null : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      return value === null ? null : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return value === null ? null : schema.unmapXml(value, ctxt);\n    }\n  };\n}\nexport { nullable };","map":{"version":3,"names":["nullable","schema","type","validateBeforeMap","value","ctxt","validateBeforeUnmap","map","unmap","validateBeforeMapXml","mapXml","unmapXml"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/schema/es/types/nullable.js"],"sourcesContent":["/**\r\n * Creates a nullable schema.\r\n *\r\n * The nullable schema allows null values or the values allowed by the given\r\n * 'schema'.\r\n */\nfunction nullable(schema) {\n  return {\n    type: function () {\n      return \"Nullable<\" + schema.type() + \">\";\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeUnmap(value, ctxt);\n    },\n    map: function (value, ctxt) {\n      return value === null ? null : schema.map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return value === null ? null : schema.unmap(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      return value === null ? [] : schema.validateBeforeMapXml(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      return value === null ? null : schema.mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return value === null ? null : schema.unmapXml(value, ctxt);\n    }\n  };\n}\n\nexport { nullable };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,MAAM,EAAE;EACxB,OAAO;IACLC,IAAI,EAAE,SAAAA,CAAA,EAAY;MAChB,OAAO,WAAW,GAAGD,MAAM,CAACC,IAAI,EAAE,GAAG,GAAG;IAC1C,CAAC;IACDC,iBAAiB,EAAE,SAAAA,CAAUC,KAAK,EAAEC,IAAI,EAAE;MACxC,OAAOD,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGH,MAAM,CAACE,iBAAiB,CAACC,KAAK,EAAEC,IAAI,CAAC;IACpE,CAAC;IACDC,mBAAmB,EAAE,SAAAA,CAAUF,KAAK,EAAEC,IAAI,EAAE;MAC1C,OAAOD,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGH,MAAM,CAACK,mBAAmB,CAACF,KAAK,EAAEC,IAAI,CAAC;IACtE,CAAC;IACDE,GAAG,EAAE,SAAAA,CAAUH,KAAK,EAAEC,IAAI,EAAE;MAC1B,OAAOD,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGH,MAAM,CAACM,GAAG,CAACH,KAAK,EAAEC,IAAI,CAAC;IACxD,CAAC;IACDG,KAAK,EAAE,SAAAA,CAAUJ,KAAK,EAAEC,IAAI,EAAE;MAC5B,OAAOD,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGH,MAAM,CAACO,KAAK,CAACJ,KAAK,EAAEC,IAAI,CAAC;IAC1D,CAAC;IACDI,oBAAoB,EAAE,SAAAA,CAAUL,KAAK,EAAEC,IAAI,EAAE;MAC3C,OAAOD,KAAK,KAAK,IAAI,GAAG,EAAE,GAAGH,MAAM,CAACQ,oBAAoB,CAACL,KAAK,EAAEC,IAAI,CAAC;IACvE,CAAC;IACDK,MAAM,EAAE,SAAAA,CAAUN,KAAK,EAAEC,IAAI,EAAE;MAC7B,OAAOD,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGH,MAAM,CAACS,MAAM,CAACN,KAAK,EAAEC,IAAI,CAAC;IAC3D,CAAC;IACDM,QAAQ,EAAE,SAAAA,CAAUP,KAAK,EAAEC,IAAI,EAAE;MAC/B,OAAOD,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGH,MAAM,CAACU,QAAQ,CAACP,KAAK,EAAEC,IAAI,CAAC;IAC7D;EACF,CAAC;AACH;AAEA,SAASL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}