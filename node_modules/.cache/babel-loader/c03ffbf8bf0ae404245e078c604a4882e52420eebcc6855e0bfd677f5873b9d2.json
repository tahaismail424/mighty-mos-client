{"ast":null,"code":"import { validateAndUnmap } from '@apimatic/schema';\nimport { ArgumentsValidationError } from '../errors/argumentsValidationError.js';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Prepares arguments for being sent in the API request.\r\n *\r\n * Each argument is validated and converted to a JSON-serialization ready value.\r\n *\r\n * If one or more arguments fail validation, an ArgumentsValidationError is\r\n * thrown, which contains the validation details for all arguments that failed\r\n * validation.\r\n *\r\n * @param params Map of arguments with values and schema\r\n * @returns Map of serialization-ready argument values\r\n *\r\n * @throws ArgumentsValidationError\r\n */\n\nfunction prepareArgs(params) {\n  var validationErrors = {};\n  var result = {};\n  for (var paramName in params) {\n    if (Object.prototype.hasOwnProperty.call(params, paramName)) {\n      var paramInfo = params[paramName];\n      var validationResult = validateAndUnmap(paramInfo[0], paramInfo[1]);\n      if (validationResult.errors) {\n        validationErrors[paramName] = validationResult.errors;\n      } else {\n        result[paramName] = validationResult.result;\n      }\n    }\n  }\n  if (Object.keys(validationErrors).length > 0) {\n    throw new ArgumentsValidationError(validationErrors);\n  }\n  return result;\n}\nexport { prepareArgs };","map":{"version":3,"names":["validateAndUnmap","ArgumentsValidationError","prepareArgs","params","validationErrors","result","paramName","Object","prototype","hasOwnProperty","call","paramInfo","validationResult","errors","keys","length"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/core/es/http/validate.js"],"sourcesContent":["import { validateAndUnmap } from '@apimatic/schema';\nimport { ArgumentsValidationError } from '../errors/argumentsValidationError.js';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\n/**\r\n * Prepares arguments for being sent in the API request.\r\n *\r\n * Each argument is validated and converted to a JSON-serialization ready value.\r\n *\r\n * If one or more arguments fail validation, an ArgumentsValidationError is\r\n * thrown, which contains the validation details for all arguments that failed\r\n * validation.\r\n *\r\n * @param params Map of arguments with values and schema\r\n * @returns Map of serialization-ready argument values\r\n *\r\n * @throws ArgumentsValidationError\r\n */\n\nfunction prepareArgs(params) {\n  var validationErrors = {};\n  var result = {};\n\n  for (var paramName in params) {\n    if (Object.prototype.hasOwnProperty.call(params, paramName)) {\n      var paramInfo = params[paramName];\n      var validationResult = validateAndUnmap(paramInfo[0], paramInfo[1]);\n\n      if (validationResult.errors) {\n        validationErrors[paramName] = validationResult.errors;\n      } else {\n        result[paramName] = validationResult.result;\n      }\n    }\n  }\n\n  if (Object.keys(validationErrors).length > 0) {\n    throw new ArgumentsValidationError(validationErrors);\n  }\n\n  return result;\n}\n\nexport { prepareArgs };"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,wBAAwB,QAAQ,uCAAuC;AAChF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAWA,CAACC,MAAM,EAAE;EAC3B,IAAIC,gBAAgB,GAAG,CAAC,CAAC;EACzB,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,KAAK,IAAIC,SAAS,IAAIH,MAAM,EAAE;IAC5B,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,MAAM,EAAEG,SAAS,CAAC,EAAE;MAC3D,IAAIK,SAAS,GAAGR,MAAM,CAACG,SAAS,CAAC;MACjC,IAAIM,gBAAgB,GAAGZ,gBAAgB,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;MAEnE,IAAIC,gBAAgB,CAACC,MAAM,EAAE;QAC3BT,gBAAgB,CAACE,SAAS,CAAC,GAAGM,gBAAgB,CAACC,MAAM;MACvD,CAAC,MAAM;QACLR,MAAM,CAACC,SAAS,CAAC,GAAGM,gBAAgB,CAACP,MAAM;MAC7C;IACF;EACF;EAEA,IAAIE,MAAM,CAACO,IAAI,CAACV,gBAAgB,CAAC,CAACW,MAAM,GAAG,CAAC,EAAE;IAC5C,MAAM,IAAId,wBAAwB,CAACG,gBAAgB,CAAC;EACtD;EAEA,OAAOC,MAAM;AACf;AAEA,SAASH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}