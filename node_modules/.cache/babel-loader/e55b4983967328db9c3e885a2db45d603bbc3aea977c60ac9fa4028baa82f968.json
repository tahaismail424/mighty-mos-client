{"ast":null,"code":"import { __spreadArray, __read, __assign, __awaiter, __generator } from 'tslib';\nimport JSONBig from '@apimatic/json-bigint';\nimport { deprecated, sanitizeUrl } from '../apiHelper.js';\nimport { ArgumentsValidationError } from '../errors/argumentsValidationError.js';\nimport { ResponseValidationError } from '../errors/responseValidationError.js';\nimport { validateAndUnmapXml, validateAndMap, validateAndMapXml } from '@apimatic/schema';\nimport { JSON_CONTENT_TYPE, setHeader, mergeHeaders, TEXT_CONTENT_TYPE, XML_CONTENT_TYPE, ACCEPT_HEADER, CONTENT_TYPE_HEADER, setHeaderIfNotSet, CONTENT_LENGTH_HEADER } from './httpHeaders.js';\nimport { callHttpInterceptors } from './httpInterceptor.js';\nimport { SkipEncode, pathTemplate } from './pathTemplate.js';\nimport { urlEncodeObject, filterFileWrapperFromKeyValuePairs, formDataEncodeObject } from './queryString.js';\nimport { prepareArgs } from './validate.js';\nimport { shouldRetryRequest, RequestRetryOption, getRetryWaitTime } from './retryConfiguration.js';\nimport { convertToStream } from '@apimatic/convert-to-stream';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\nvar JSON = /*#__PURE__*/JSONBig();\nfunction skipEncode(value) {\n  return new SkipEncode(value);\n}\nvar DefaultRequestBuilder = /*#__PURE__*/\n\n/** @class */\nfunction () {\n  function DefaultRequestBuilder(_httpClient, _baseUrlProvider, _apiErrorFactory, _authenticationProvider, _httpMethod, _xmlSerializer, _retryConfig, _path) {\n    this._httpClient = _httpClient;\n    this._baseUrlProvider = _baseUrlProvider;\n    this._apiErrorFactory = _apiErrorFactory;\n    this._authenticationProvider = _authenticationProvider;\n    this._httpMethod = _httpMethod;\n    this._xmlSerializer = _xmlSerializer;\n    this._retryConfig = _retryConfig;\n    this._path = _path;\n    this._headers = {};\n    this._query = [];\n    this._interceptors = [];\n    this._validateResponse = true;\n    this._addResponseValidator();\n    this._addAuthentication();\n    this._addRetryInterceptor();\n    this._retryOption = RequestRetryOption.Default;\n    this.prepareArgs = prepareArgs.bind(this);\n  }\n  DefaultRequestBuilder.prototype.authenticate = function (params) {\n    this._authParams = params;\n  };\n  DefaultRequestBuilder.prototype.requestRetryOption = function (option) {\n    this._retryOption = option;\n  };\n  DefaultRequestBuilder.prototype.deprecated = function (methodName, message) {\n    deprecated(methodName, message);\n  };\n  DefaultRequestBuilder.prototype.appendTemplatePath = function (strings) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var pathSegment = pathTemplate.apply(void 0, __spreadArray([strings], __read(args)));\n    this.appendPath(pathSegment);\n  };\n  DefaultRequestBuilder.prototype.method = function (httpMethodName) {\n    this._httpMethod = httpMethodName;\n  };\n  DefaultRequestBuilder.prototype.baseUrl = function (arg) {\n    this._baseUrlArg = arg;\n  };\n  DefaultRequestBuilder.prototype.appendPath = function (path) {\n    this._path = this._path ? mergePath(this._path, path) : path;\n  };\n  DefaultRequestBuilder.prototype.acceptJson = function () {\n    this._accept = JSON_CONTENT_TYPE;\n  };\n  DefaultRequestBuilder.prototype.accept = function (acceptHeaderValue) {\n    this._accept = acceptHeaderValue;\n  };\n  DefaultRequestBuilder.prototype.contentType = function (contentTypeHeaderValue) {\n    this._contentType = contentTypeHeaderValue;\n  };\n  DefaultRequestBuilder.prototype.header = function (name, value) {\n    if (value === undefined) {\n      return;\n    }\n    setHeader(this._headers, name, value.toString());\n  };\n  DefaultRequestBuilder.prototype.headers = function (headersToMerge) {\n    mergeHeaders(this._headers, headersToMerge);\n  };\n  DefaultRequestBuilder.prototype.query = function (nameOrParameters, value) {\n    var _a;\n    if (nameOrParameters === null || nameOrParameters === undefined) {\n      return;\n    }\n    var queryString = typeof nameOrParameters === 'string' ? urlEncodeObject((_a = {}, _a[nameOrParameters] = value, _a)) : urlEncodeObject(nameOrParameters);\n    if (queryString) {\n      this._query.push(queryString);\n    }\n  };\n  DefaultRequestBuilder.prototype.text = function (body) {\n    this._body = body;\n    this._setContentTypeIfNotSet(TEXT_CONTENT_TYPE);\n  };\n  DefaultRequestBuilder.prototype.json = function (data) {\n    this._body = JSON.stringify(data);\n    this._setContentTypeIfNotSet(JSON_CONTENT_TYPE);\n  };\n  DefaultRequestBuilder.prototype.xml = function (argName, data, rootName, schema) {\n    var _a;\n    var mappingResult = validateAndUnmapXml(data, schema);\n    if (mappingResult.errors) {\n      throw new ArgumentsValidationError((_a = {}, _a[argName] = mappingResult.errors, _a));\n    }\n    this._body = this._xmlSerializer.xmlSerialize(rootName, mappingResult.result);\n    this._setContentTypeIfNotSet(XML_CONTENT_TYPE);\n  };\n  DefaultRequestBuilder.prototype.stream = function (file) {\n    this._stream = file;\n  };\n  DefaultRequestBuilder.prototype.form = function (parameters) {\n    this._form = filterFileWrapperFromKeyValuePairs(formDataEncodeObject(parameters));\n  };\n  DefaultRequestBuilder.prototype.formData = function (parameters) {\n    this._formData = formDataEncodeObject(parameters);\n  };\n  DefaultRequestBuilder.prototype.toRequest = function () {\n    var request = {\n      method: this._httpMethod,\n      url: mergePath(this._baseUrlProvider(this._baseUrlArg), this._path)\n    };\n    if (this._query.length > 0) {\n      var queryString = this._query.join('&');\n      request.url += (request.url.indexOf('?') === -1 ? '?' : '&') + queryString;\n    }\n    request.url = sanitizeUrl(request.url); // defensively copy headers\n\n    var headers = __assign({}, this._headers);\n    if (this._accept) {\n      setHeader(headers, ACCEPT_HEADER, this._accept);\n    }\n    if (this._contentType) {\n      setHeader(headers, CONTENT_TYPE_HEADER, this._contentType);\n    }\n    setHeader(headers, CONTENT_LENGTH_HEADER);\n    request.headers = headers;\n    if (this._body !== undefined) {\n      request.body = {\n        type: 'text',\n        content: this._body\n      };\n    } else if (this._form !== undefined) {\n      request.body = {\n        type: 'form',\n        content: this._form\n      };\n    } else if (this._formData !== undefined) {\n      request.body = {\n        type: 'form-data',\n        content: this._formData\n      };\n    } else if (this._stream !== undefined) {\n      request.body = {\n        type: 'stream',\n        content: this._stream\n      };\n    }\n    return request;\n  };\n  DefaultRequestBuilder.prototype.intercept = function (interceptor) {\n    this._interceptors.push(interceptor);\n  };\n  DefaultRequestBuilder.prototype.interceptRequest = function (interceptor) {\n    this.intercept(function (req, opt, next) {\n      return next(interceptor(req), opt);\n    });\n  };\n  DefaultRequestBuilder.prototype.interceptResponse = function (interceptor) {\n    var _this = this;\n    this.intercept(function (req, opt, next) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = interceptor;\n              return [4\n              /*yield*/, next(req, opt)];\n            case 1:\n              return [2\n              /*return*/, _a.apply(void 0, [_b.sent()])];\n          }\n        });\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.defaultToError = function (apiErrorCtor) {\n    this._apiErrorFactory = apiErrorCtor;\n  };\n  DefaultRequestBuilder.prototype.validateResponse = function (validate) {\n    this._validateResponse = validate;\n  };\n  DefaultRequestBuilder.prototype.throwOn = function (statusCode, errorConstructor) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    this.interceptResponse(function (context) {\n      var response = context.response;\n      if (typeof statusCode === 'number' && response.statusCode === statusCode || typeof statusCode !== 'number' && response.statusCode >= statusCode[0] && response.statusCode <= statusCode[1]) {\n        throw new (errorConstructor.bind.apply(errorConstructor, __spreadArray([void 0, context], __read(args))))();\n      }\n      return context;\n    });\n  };\n  DefaultRequestBuilder.prototype.call = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pipeline, _a, request, response;\n      var _this = this;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            pipeline = callHttpInterceptors(this._interceptors,\n            // tslint:disable-next-line:no-shadowed-variable\n            function (request, opt) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/, this._httpClient(request, opt)];\n                    case 1:\n                      response = _a.sent();\n                      return [2\n                      /*return*/, {\n                        request: request,\n                        response: response\n                      }];\n                  }\n                });\n              });\n            });\n            return [4\n            /*yield*/, pipeline(this.toRequest(), requestOptions)];\n          case 1:\n            _a = _b.sent(), request = _a.request, response = _a.response;\n            return [2\n            /*return*/, __assign(__assign({}, response), {\n              request: request,\n              result: undefined\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.callAsText = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/, this.call(requestOptions)];\n          case 1:\n            result = _a.sent();\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as string.'); // TODO: Replace with SDK error\n            }\n\n            return [2\n            /*return*/, __assign(__assign({}, result), {\n              result: result.body\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.callAsOptionalText = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/, this.call(requestOptions)];\n          case 1:\n            result = _a.sent();\n            if (typeof result.body !== 'string') {\n              return [2\n              /*return*/, __assign(__assign({}, result), {\n                result: undefined\n              })];\n            }\n            return [2\n            /*return*/, __assign(__assign({}, result), {\n              result: result.body\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.callAsStream = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (req) {\n              return __assign(__assign({}, req), {\n                responseType: 'stream'\n              });\n            });\n            return [4\n            /*yield*/, this.call(requestOptions)];\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/, __assign(__assign({}, result), {\n              result: convertToStream(result.body)\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.callAsJson = function (schema, requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, parsed, mappingResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (request) {\n              var headers = __assign({}, request.headers);\n              setHeaderIfNotSet(headers, ACCEPT_HEADER, JSON_CONTENT_TYPE);\n              return __assign(__assign({}, request), {\n                headers: headers\n              });\n            });\n            return [4\n            /*yield*/, this.call(requestOptions)];\n          case 1:\n            result = _a.sent();\n            if (result.body === '') {\n              throw new Error('Could not parse body as JSON. The response body is empty.');\n            }\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as JSON. The response body is not a string.');\n            }\n            try {\n              parsed = JSON.parse(result.body);\n            } catch (error) {\n              throw new Error(\"Could not parse body as JSON.\\n\\n\" + error.message);\n            }\n            mappingResult = validateAndMap(parsed, schema);\n            if (mappingResult.errors) {\n              throw new ResponseValidationError(result, mappingResult.errors);\n            }\n            return [2\n            /*return*/, __assign(__assign({}, result), {\n              result: mappingResult.result\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype.callAsXml = function (rootName, schema, requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, xmlObject, error_1, mappingResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (request) {\n              var headers = __assign({}, request.headers);\n              setHeaderIfNotSet(headers, ACCEPT_HEADER, XML_CONTENT_TYPE);\n              return __assign(__assign({}, request), {\n                headers: headers\n              });\n            });\n            return [4\n            /*yield*/, this.call(requestOptions)];\n          case 1:\n            result = _a.sent();\n            if (result.body === '') {\n              throw new Error('Could not parse body as XML. The response body is empty.');\n            }\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as XML. The response body is not a string.');\n            }\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4\n            /*yield*/, this._xmlSerializer.xmlDeserialize(rootName, result.body)];\n          case 3:\n            xmlObject = _a.sent();\n            return [3\n            /*break*/, 5];\n          case 4:\n            error_1 = _a.sent();\n            throw new Error(\"Could not parse body as XML.\\n\\n\" + error_1.message);\n          case 5:\n            mappingResult = validateAndMapXml(xmlObject, schema);\n            if (mappingResult.errors) {\n              throw new ResponseValidationError(result, mappingResult.errors);\n            }\n            return [2\n            /*return*/, __assign(__assign({}, result), {\n              result: mappingResult.result\n            })];\n        }\n      });\n    });\n  };\n  DefaultRequestBuilder.prototype._setContentTypeIfNotSet = function (contentType) {\n    if (!this._contentType) {\n      setHeaderIfNotSet(this._headers, CONTENT_TYPE_HEADER, contentType);\n    }\n  };\n  DefaultRequestBuilder.prototype._addResponseValidator = function () {\n    var _this = this;\n    this.interceptResponse(function (context) {\n      var response = context.response;\n      if (_this._validateResponse && (response.statusCode < 200 || response.statusCode >= 300)) {\n        throw new _this._apiErrorFactory(context, \"Response status code was not ok: \" + response.statusCode + \".\");\n      }\n      return context;\n    });\n  };\n  DefaultRequestBuilder.prototype._addAuthentication = function () {\n    var _this = this;\n    this.intercept(function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var handler = _this._authenticationProvider(_this._authParams);\n      return handler.apply(void 0, __spreadArray([], __read(args)));\n    });\n  };\n  DefaultRequestBuilder.prototype._addRetryInterceptor = function () {\n    var _this = this;\n    this.intercept(function (request, options, next) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var context, allowedWaitTime, retryCount, waitTime, timeoutError, shouldRetry, error_2;\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              allowedWaitTime = this._retryConfig.maximumRetryWaitTime;\n              retryCount = 0;\n              waitTime = 0;\n              shouldRetry = shouldRetryRequest(this._retryConfig, this._retryOption, this._httpMethod);\n              _b.label = 1;\n            case 1:\n              timeoutError = undefined;\n              if (!(retryCount > 0)) return [3\n              /*break*/, 3];\n              return [4\n              /*yield*/, new Promise(function (res) {\n                return setTimeout(res, waitTime * 1000);\n              })];\n            case 2:\n              _b.sent();\n              allowedWaitTime -= waitTime;\n              _b.label = 3;\n            case 3:\n              _b.trys.push([3, 5,, 6]);\n              return [4\n              /*yield*/, next(request, options)];\n            case 4:\n              context = _b.sent();\n              return [3\n              /*break*/, 6];\n            case 5:\n              error_2 = _b.sent();\n              timeoutError = error_2;\n              return [3\n              /*break*/, 6];\n            case 6:\n              if (shouldRetry) {\n                waitTime = getRetryWaitTime(this._retryConfig, allowedWaitTime, retryCount, context === null || context === void 0 ? void 0 : context.response.statusCode, (_a = context === null || context === void 0 ? void 0 : context.response) === null || _a === void 0 ? void 0 : _a.headers, timeoutError);\n                retryCount++;\n              }\n              _b.label = 7;\n            case 7:\n              if (waitTime > 0) return [3\n              /*break*/, 1];\n              _b.label = 8;\n            case 8:\n              if (timeoutError) {\n                throw timeoutError;\n              }\n              if (typeof (context === null || context === void 0 ? void 0 : context.response) === 'undefined') {\n                throw new Error('Response is undefined.');\n              }\n              return [2\n              /*return*/, {\n                request: request,\n                response: context.response\n              }];\n          }\n        });\n      });\n    });\n  };\n  return DefaultRequestBuilder;\n}();\nfunction createRequestBuilderFactory(httpClient, baseUrlProvider, apiErrorFactory, authenticationProvider, xmlSerializer, retryConfig) {\n  return function (httpMethod, path) {\n    return new DefaultRequestBuilder(httpClient, baseUrlProvider, apiErrorFactory, authenticationProvider, httpMethod, xmlSerializer, retryConfig, path);\n  };\n}\nfunction mergePath(left, right) {\n  if (!right || right === '') {\n    return left;\n  }\n  if (left[left.length - 1] === '/' && right[0] === '/') {\n    return left + right.substr(1);\n  } else if (left[left.length - 1] === '/' || right[0] === '/') {\n    return left + right;\n  } else {\n    return left + \"/\" + right;\n  }\n}\nexport { DefaultRequestBuilder, createRequestBuilderFactory, skipEncode };","map":{"version":3,"names":["__spreadArray","__read","__assign","__awaiter","__generator","JSONBig","deprecated","sanitizeUrl","ArgumentsValidationError","ResponseValidationError","validateAndUnmapXml","validateAndMap","validateAndMapXml","JSON_CONTENT_TYPE","setHeader","mergeHeaders","TEXT_CONTENT_TYPE","XML_CONTENT_TYPE","ACCEPT_HEADER","CONTENT_TYPE_HEADER","setHeaderIfNotSet","CONTENT_LENGTH_HEADER","callHttpInterceptors","SkipEncode","pathTemplate","urlEncodeObject","filterFileWrapperFromKeyValuePairs","formDataEncodeObject","prepareArgs","shouldRetryRequest","RequestRetryOption","getRetryWaitTime","convertToStream","JSON","skipEncode","value","DefaultRequestBuilder","_httpClient","_baseUrlProvider","_apiErrorFactory","_authenticationProvider","_httpMethod","_xmlSerializer","_retryConfig","_path","_headers","_query","_interceptors","_validateResponse","_addResponseValidator","_addAuthentication","_addRetryInterceptor","_retryOption","Default","bind","prototype","authenticate","params","_authParams","requestRetryOption","option","methodName","message","appendTemplatePath","strings","args","_i","arguments","length","pathSegment","apply","appendPath","method","httpMethodName","baseUrl","arg","_baseUrlArg","path","mergePath","acceptJson","_accept","accept","acceptHeaderValue","contentType","contentTypeHeaderValue","_contentType","header","name","undefined","toString","headers","headersToMerge","query","nameOrParameters","_a","queryString","push","text","body","_body","_setContentTypeIfNotSet","json","data","stringify","xml","argName","rootName","schema","mappingResult","errors","xmlSerialize","result","stream","file","_stream","form","parameters","_form","formData","_formData","toRequest","request","url","join","indexOf","type","content","intercept","interceptor","interceptRequest","req","opt","next","interceptResponse","_this","_b","label","sent","defaultToError","apiErrorCtor","validateResponse","validate","throwOn","statusCode","errorConstructor","context","response","call","requestOptions","pipeline","callAsText","Error","callAsOptionalText","callAsStream","responseType","callAsJson","parsed","parse","error","callAsXml","xmlObject","error_1","trys","xmlDeserialize","handler","options","allowedWaitTime","retryCount","waitTime","timeoutError","shouldRetry","error_2","maximumRetryWaitTime","Promise","res","setTimeout","createRequestBuilderFactory","httpClient","baseUrlProvider","apiErrorFactory","authenticationProvider","xmlSerializer","retryConfig","httpMethod","left","right","substr"],"sources":["/Users/tahaismail/web_projects/mighty_mos/client/node_modules/@apimatic/core/es/http/requestBuilder.js"],"sourcesContent":["import { __spreadArray, __read, __assign, __awaiter, __generator } from 'tslib';\nimport JSONBig from '@apimatic/json-bigint';\nimport { deprecated, sanitizeUrl } from '../apiHelper.js';\nimport { ArgumentsValidationError } from '../errors/argumentsValidationError.js';\nimport { ResponseValidationError } from '../errors/responseValidationError.js';\nimport { validateAndUnmapXml, validateAndMap, validateAndMapXml } from '@apimatic/schema';\nimport { JSON_CONTENT_TYPE, setHeader, mergeHeaders, TEXT_CONTENT_TYPE, XML_CONTENT_TYPE, ACCEPT_HEADER, CONTENT_TYPE_HEADER, setHeaderIfNotSet, CONTENT_LENGTH_HEADER } from './httpHeaders.js';\nimport { callHttpInterceptors } from './httpInterceptor.js';\nimport { SkipEncode, pathTemplate } from './pathTemplate.js';\nimport { urlEncodeObject, filterFileWrapperFromKeyValuePairs, formDataEncodeObject } from './queryString.js';\nimport { prepareArgs } from './validate.js';\nimport { shouldRetryRequest, RequestRetryOption, getRetryWaitTime } from './retryConfiguration.js';\nimport { convertToStream } from '@apimatic/convert-to-stream';\n/**\r\n * bandwidthLib\r\n *\r\n * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).\r\n */\n\nvar JSON = /*#__PURE__*/JSONBig();\n\nfunction skipEncode(value) {\n  return new SkipEncode(value);\n}\n\nvar DefaultRequestBuilder =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function DefaultRequestBuilder(_httpClient, _baseUrlProvider, _apiErrorFactory, _authenticationProvider, _httpMethod, _xmlSerializer, _retryConfig, _path) {\n    this._httpClient = _httpClient;\n    this._baseUrlProvider = _baseUrlProvider;\n    this._apiErrorFactory = _apiErrorFactory;\n    this._authenticationProvider = _authenticationProvider;\n    this._httpMethod = _httpMethod;\n    this._xmlSerializer = _xmlSerializer;\n    this._retryConfig = _retryConfig;\n    this._path = _path;\n    this._headers = {};\n    this._query = [];\n    this._interceptors = [];\n    this._validateResponse = true;\n\n    this._addResponseValidator();\n\n    this._addAuthentication();\n\n    this._addRetryInterceptor();\n\n    this._retryOption = RequestRetryOption.Default;\n    this.prepareArgs = prepareArgs.bind(this);\n  }\n\n  DefaultRequestBuilder.prototype.authenticate = function (params) {\n    this._authParams = params;\n  };\n\n  DefaultRequestBuilder.prototype.requestRetryOption = function (option) {\n    this._retryOption = option;\n  };\n\n  DefaultRequestBuilder.prototype.deprecated = function (methodName, message) {\n    deprecated(methodName, message);\n  };\n\n  DefaultRequestBuilder.prototype.appendTemplatePath = function (strings) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var pathSegment = pathTemplate.apply(void 0, __spreadArray([strings], __read(args)));\n    this.appendPath(pathSegment);\n  };\n\n  DefaultRequestBuilder.prototype.method = function (httpMethodName) {\n    this._httpMethod = httpMethodName;\n  };\n\n  DefaultRequestBuilder.prototype.baseUrl = function (arg) {\n    this._baseUrlArg = arg;\n  };\n\n  DefaultRequestBuilder.prototype.appendPath = function (path) {\n    this._path = this._path ? mergePath(this._path, path) : path;\n  };\n\n  DefaultRequestBuilder.prototype.acceptJson = function () {\n    this._accept = JSON_CONTENT_TYPE;\n  };\n\n  DefaultRequestBuilder.prototype.accept = function (acceptHeaderValue) {\n    this._accept = acceptHeaderValue;\n  };\n\n  DefaultRequestBuilder.prototype.contentType = function (contentTypeHeaderValue) {\n    this._contentType = contentTypeHeaderValue;\n  };\n\n  DefaultRequestBuilder.prototype.header = function (name, value) {\n    if (value === undefined) {\n      return;\n    }\n\n    setHeader(this._headers, name, value.toString());\n  };\n\n  DefaultRequestBuilder.prototype.headers = function (headersToMerge) {\n    mergeHeaders(this._headers, headersToMerge);\n  };\n\n  DefaultRequestBuilder.prototype.query = function (nameOrParameters, value) {\n    var _a;\n\n    if (nameOrParameters === null || nameOrParameters === undefined) {\n      return;\n    }\n\n    var queryString = typeof nameOrParameters === 'string' ? urlEncodeObject((_a = {}, _a[nameOrParameters] = value, _a)) : urlEncodeObject(nameOrParameters);\n\n    if (queryString) {\n      this._query.push(queryString);\n    }\n  };\n\n  DefaultRequestBuilder.prototype.text = function (body) {\n    this._body = body;\n\n    this._setContentTypeIfNotSet(TEXT_CONTENT_TYPE);\n  };\n\n  DefaultRequestBuilder.prototype.json = function (data) {\n    this._body = JSON.stringify(data);\n\n    this._setContentTypeIfNotSet(JSON_CONTENT_TYPE);\n  };\n\n  DefaultRequestBuilder.prototype.xml = function (argName, data, rootName, schema) {\n    var _a;\n\n    var mappingResult = validateAndUnmapXml(data, schema);\n\n    if (mappingResult.errors) {\n      throw new ArgumentsValidationError((_a = {}, _a[argName] = mappingResult.errors, _a));\n    }\n\n    this._body = this._xmlSerializer.xmlSerialize(rootName, mappingResult.result);\n\n    this._setContentTypeIfNotSet(XML_CONTENT_TYPE);\n  };\n\n  DefaultRequestBuilder.prototype.stream = function (file) {\n    this._stream = file;\n  };\n\n  DefaultRequestBuilder.prototype.form = function (parameters) {\n    this._form = filterFileWrapperFromKeyValuePairs(formDataEncodeObject(parameters));\n  };\n\n  DefaultRequestBuilder.prototype.formData = function (parameters) {\n    this._formData = formDataEncodeObject(parameters);\n  };\n\n  DefaultRequestBuilder.prototype.toRequest = function () {\n    var request = {\n      method: this._httpMethod,\n      url: mergePath(this._baseUrlProvider(this._baseUrlArg), this._path)\n    };\n\n    if (this._query.length > 0) {\n      var queryString = this._query.join('&');\n\n      request.url += (request.url.indexOf('?') === -1 ? '?' : '&') + queryString;\n    }\n\n    request.url = sanitizeUrl(request.url); // defensively copy headers\n\n    var headers = __assign({}, this._headers);\n\n    if (this._accept) {\n      setHeader(headers, ACCEPT_HEADER, this._accept);\n    }\n\n    if (this._contentType) {\n      setHeader(headers, CONTENT_TYPE_HEADER, this._contentType);\n    }\n\n    setHeader(headers, CONTENT_LENGTH_HEADER);\n    request.headers = headers;\n\n    if (this._body !== undefined) {\n      request.body = {\n        type: 'text',\n        content: this._body\n      };\n    } else if (this._form !== undefined) {\n      request.body = {\n        type: 'form',\n        content: this._form\n      };\n    } else if (this._formData !== undefined) {\n      request.body = {\n        type: 'form-data',\n        content: this._formData\n      };\n    } else if (this._stream !== undefined) {\n      request.body = {\n        type: 'stream',\n        content: this._stream\n      };\n    }\n\n    return request;\n  };\n\n  DefaultRequestBuilder.prototype.intercept = function (interceptor) {\n    this._interceptors.push(interceptor);\n  };\n\n  DefaultRequestBuilder.prototype.interceptRequest = function (interceptor) {\n    this.intercept(function (req, opt, next) {\n      return next(interceptor(req), opt);\n    });\n  };\n\n  DefaultRequestBuilder.prototype.interceptResponse = function (interceptor) {\n    var _this = this;\n\n    this.intercept(function (req, opt, next) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = interceptor;\n              return [4\n              /*yield*/\n              , next(req, opt)];\n\n            case 1:\n              return [2\n              /*return*/\n              , _a.apply(void 0, [_b.sent()])];\n          }\n        });\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.defaultToError = function (apiErrorCtor) {\n    this._apiErrorFactory = apiErrorCtor;\n  };\n\n  DefaultRequestBuilder.prototype.validateResponse = function (validate) {\n    this._validateResponse = validate;\n  };\n\n  DefaultRequestBuilder.prototype.throwOn = function (statusCode, errorConstructor) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    this.interceptResponse(function (context) {\n      var response = context.response;\n\n      if (typeof statusCode === 'number' && response.statusCode === statusCode || typeof statusCode !== 'number' && response.statusCode >= statusCode[0] && response.statusCode <= statusCode[1]) {\n        throw new (errorConstructor.bind.apply(errorConstructor, __spreadArray([void 0, context], __read(args))))();\n      }\n\n      return context;\n    });\n  };\n\n  DefaultRequestBuilder.prototype.call = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pipeline, _a, request, response;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            pipeline = callHttpInterceptors(this._interceptors, // tslint:disable-next-line:no-shadowed-variable\n            function (request, opt) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var response;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      return [4\n                      /*yield*/\n                      , this._httpClient(request, opt)];\n\n                    case 1:\n                      response = _a.sent();\n                      return [2\n                      /*return*/\n                      , {\n                        request: request,\n                        response: response\n                      }];\n                  }\n                });\n              });\n            });\n            return [4\n            /*yield*/\n            , pipeline(this.toRequest(), requestOptions)];\n\n          case 1:\n            _a = _b.sent(), request = _a.request, response = _a.response;\n            return [2\n            /*return*/\n            , __assign(__assign({}, response), {\n              request: request,\n              result: undefined\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.callAsText = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.call(requestOptions)];\n\n          case 1:\n            result = _a.sent();\n\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as string.'); // TODO: Replace with SDK error\n            }\n\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              result: result.body\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.callAsOptionalText = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.call(requestOptions)];\n\n          case 1:\n            result = _a.sent();\n\n            if (typeof result.body !== 'string') {\n              return [2\n              /*return*/\n              , __assign(__assign({}, result), {\n                result: undefined\n              })];\n            }\n\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              result: result.body\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.callAsStream = function (requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (req) {\n              return __assign(__assign({}, req), {\n                responseType: 'stream'\n              });\n            });\n            return [4\n            /*yield*/\n            , this.call(requestOptions)];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              result: convertToStream(result.body)\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.callAsJson = function (schema, requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, parsed, mappingResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (request) {\n              var headers = __assign({}, request.headers);\n\n              setHeaderIfNotSet(headers, ACCEPT_HEADER, JSON_CONTENT_TYPE);\n              return __assign(__assign({}, request), {\n                headers: headers\n              });\n            });\n            return [4\n            /*yield*/\n            , this.call(requestOptions)];\n\n          case 1:\n            result = _a.sent();\n\n            if (result.body === '') {\n              throw new Error('Could not parse body as JSON. The response body is empty.');\n            }\n\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as JSON. The response body is not a string.');\n            }\n\n            try {\n              parsed = JSON.parse(result.body);\n            } catch (error) {\n              throw new Error(\"Could not parse body as JSON.\\n\\n\" + error.message);\n            }\n\n            mappingResult = validateAndMap(parsed, schema);\n\n            if (mappingResult.errors) {\n              throw new ResponseValidationError(result, mappingResult.errors);\n            }\n\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              result: mappingResult.result\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype.callAsXml = function (rootName, schema, requestOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, xmlObject, error_1, mappingResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.interceptRequest(function (request) {\n              var headers = __assign({}, request.headers);\n\n              setHeaderIfNotSet(headers, ACCEPT_HEADER, XML_CONTENT_TYPE);\n              return __assign(__assign({}, request), {\n                headers: headers\n              });\n            });\n            return [4\n            /*yield*/\n            , this.call(requestOptions)];\n\n          case 1:\n            result = _a.sent();\n\n            if (result.body === '') {\n              throw new Error('Could not parse body as XML. The response body is empty.');\n            }\n\n            if (typeof result.body !== 'string') {\n              throw new Error('Could not parse body as XML. The response body is not a string.');\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._xmlSerializer.xmlDeserialize(rootName, result.body)];\n\n          case 3:\n            xmlObject = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            error_1 = _a.sent();\n            throw new Error(\"Could not parse body as XML.\\n\\n\" + error_1.message);\n\n          case 5:\n            mappingResult = validateAndMapXml(xmlObject, schema);\n\n            if (mappingResult.errors) {\n              throw new ResponseValidationError(result, mappingResult.errors);\n            }\n\n            return [2\n            /*return*/\n            , __assign(__assign({}, result), {\n              result: mappingResult.result\n            })];\n        }\n      });\n    });\n  };\n\n  DefaultRequestBuilder.prototype._setContentTypeIfNotSet = function (contentType) {\n    if (!this._contentType) {\n      setHeaderIfNotSet(this._headers, CONTENT_TYPE_HEADER, contentType);\n    }\n  };\n\n  DefaultRequestBuilder.prototype._addResponseValidator = function () {\n    var _this = this;\n\n    this.interceptResponse(function (context) {\n      var response = context.response;\n\n      if (_this._validateResponse && (response.statusCode < 200 || response.statusCode >= 300)) {\n        throw new _this._apiErrorFactory(context, \"Response status code was not ok: \" + response.statusCode + \".\");\n      }\n\n      return context;\n    });\n  };\n\n  DefaultRequestBuilder.prototype._addAuthentication = function () {\n    var _this = this;\n\n    this.intercept(function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var handler = _this._authenticationProvider(_this._authParams);\n\n      return handler.apply(void 0, __spreadArray([], __read(args)));\n    });\n  };\n\n  DefaultRequestBuilder.prototype._addRetryInterceptor = function () {\n    var _this = this;\n\n    this.intercept(function (request, options, next) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var context, allowedWaitTime, retryCount, waitTime, timeoutError, shouldRetry, error_2;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              allowedWaitTime = this._retryConfig.maximumRetryWaitTime;\n              retryCount = 0;\n              waitTime = 0;\n              shouldRetry = shouldRetryRequest(this._retryConfig, this._retryOption, this._httpMethod);\n              _b.label = 1;\n\n            case 1:\n              timeoutError = undefined;\n              if (!(retryCount > 0)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , new Promise(function (res) {\n                return setTimeout(res, waitTime * 1000);\n              })];\n\n            case 2:\n              _b.sent();\n\n              allowedWaitTime -= waitTime;\n              _b.label = 3;\n\n            case 3:\n              _b.trys.push([3, 5,, 6]);\n\n              return [4\n              /*yield*/\n              , next(request, options)];\n\n            case 4:\n              context = _b.sent();\n              return [3\n              /*break*/\n              , 6];\n\n            case 5:\n              error_2 = _b.sent();\n              timeoutError = error_2;\n              return [3\n              /*break*/\n              , 6];\n\n            case 6:\n              if (shouldRetry) {\n                waitTime = getRetryWaitTime(this._retryConfig, allowedWaitTime, retryCount, context === null || context === void 0 ? void 0 : context.response.statusCode, (_a = context === null || context === void 0 ? void 0 : context.response) === null || _a === void 0 ? void 0 : _a.headers, timeoutError);\n                retryCount++;\n              }\n\n              _b.label = 7;\n\n            case 7:\n              if (waitTime > 0) return [3\n              /*break*/\n              , 1];\n              _b.label = 8;\n\n            case 8:\n              if (timeoutError) {\n                throw timeoutError;\n              }\n\n              if (typeof (context === null || context === void 0 ? void 0 : context.response) === 'undefined') {\n                throw new Error('Response is undefined.');\n              }\n\n              return [2\n              /*return*/\n              , {\n                request: request,\n                response: context.response\n              }];\n          }\n        });\n      });\n    });\n  };\n\n  return DefaultRequestBuilder;\n}();\n\nfunction createRequestBuilderFactory(httpClient, baseUrlProvider, apiErrorFactory, authenticationProvider, xmlSerializer, retryConfig) {\n  return function (httpMethod, path) {\n    return new DefaultRequestBuilder(httpClient, baseUrlProvider, apiErrorFactory, authenticationProvider, httpMethod, xmlSerializer, retryConfig, path);\n  };\n}\n\nfunction mergePath(left, right) {\n  if (!right || right === '') {\n    return left;\n  }\n\n  if (left[left.length - 1] === '/' && right[0] === '/') {\n    return left + right.substr(1);\n  } else if (left[left.length - 1] === '/' || right[0] === '/') {\n    return left + right;\n  } else {\n    return left + \"/\" + right;\n  }\n}\n\nexport { DefaultRequestBuilder, createRequestBuilderFactory, skipEncode };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}